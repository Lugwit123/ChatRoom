# 项目配置
## 环境配置
- python解释器路径: D:\TD_Depot\Software\Lugwit_syncPlug\lugwit_insapp\python_env\lugwit_python.exe
- 控制台编码: 65001
- 时间戳格式: 带时区

## 目录结构
- 客户端代码: clientend\pyqt_chatroom.py
- 后端日志: backend\logs\server.log
- 数据库初始化: backend\init_database.py
- 编码工具: backend\encoding_utils.py
- 启动脚本: run_backend_server.bat (项目根目录)

# 开发规范
## 代码规范
- backend根目录下不使用相对导入
- 禁止使用SqlModel
- 每个组一个独立的消息表

## 数据库操作
- 初始化顺序:
  1. 清空数据库
  2. 创建用户
  3. 创建组
  4. 插入消息数据

## 错误处理
- 错误记录: \backend\docs\error.md
- 日志监控: backend\logs\server.log
- 定期检查错误文档

## 代码备份
- 优先从备份代码中寻找丢失的模块或方法
- 参考文档中的旧版本代码介绍

# 运行说明
## 后端启动
1. 切换到后端目录
2. 使用cmd /c un_backend_server.bat启动
3. 

## 文档维护
- 定期查看和修正backend\docs下的后端文档
- 及时更新错误文档

# 注意事项
1. 数据库初始化文件仅在指定目录使用
2. 严格遵循数据库初始化顺序
3. 保持时间戳格式一致性
4. 定期检查并更新错误文档


# 错误预防
- 每次回答前检查 ERROR_GUIDE.md
- 发现新错误时更新 ERROR_GUIDE.md
- 代码修改前进行错误预防检查
- 使用代码检查工具验证修改

每次修改关于数据库的知识详细讲解一下

# 新的后端结构,多参考旧版,在backend\backup\20250115下
backend/app/
├── core/                    # 核心功能(框架级)
│   ├── auth/               # 认证相关
│   │   ├── __init__.py
│   │   └── auth.py        # 认证逻辑
│   ├── websocket/         # WebSocket基础设施
│   │   ├── __init__.py
│   │   ├── manager.py     # 连接管理
│   │   └── handlers.py    # 基础事件处理
│   └── exceptions/        # 异常处理
│       ├── __init__.py
│       ├── handlers.py    # 异常处理器
│       └── exceptions.py  # 自定义异常
├── domain/                # 领域模块(业务逻辑)
│   ├── message/          # 消息领域
│   │   ├── __init__.py
│   │   ├── repository.py # 消息仓储
│   │   ├── service.py    # 消息服务
│   │   └── router.py     # 消息路由
│   ├── user/            # 用户领域
│   │   ├── __init__.py
│   │   ├── repository.py # 用户仓储
│   │   ├── service.py   # 用户服务
│   │   └── router.py    # 用户路由
│   └── group/           # 群组领域
│       ├── __init__.py
│       ├── repository.py # 群组仓储
│       ├── service.py   # 群组服务
│       └── router.py    # 群组路由
├── db/                  # 数据库基础设施
│   ├── __init__.py
│   ├── database.py     # 数据库配置
│   ├── base.py         # 基础仓储类
│   ├── schemas.py      # 共用数据模型
│   └── init/           # 数据库初始化相关
│       ├── __init__.py
│       ├── enums.py    # 枚举类型管理
│       ├── tables.py   # 表管理
│       └── data/       # 初始数据加载
│           ├── __init__.py
│           ├── users.py
│           ├── groups.py
│           ├── messages.py
│           └── devices.py
└── utils/              # 通用工具
    ├── __init__.py
    ├── encoding.py     # 编码工具
    ├── security.py     # 安全工具
    └── common.py       # 通用工具